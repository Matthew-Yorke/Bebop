//*********************************************************************************************************************
//
// File: Particle.cpp
//
// Description:
//    This class handles creating and drawing of a sprite image.
//
//*********************************************************************************************************************

#include "Particle.h"

namespace Bebop { namespace Graphics
{
//*********************************************************************************************************************
// Public Methods - Start
//*********************************************************************************************************************

   //******************************************************************************************************************
   //
   // Method: Particle
   //
   // Description:
   //    Constructor for the particle class.
   //
   // Arguments:
   //    aPositionX  - The X-Coordinate position where the particle is to be drawn.
   //    aPositionY  - The Y-Coordinate position where the particle is to be drawn.
   //    aTimeToLive - The time left for the particle to exist.
   //
   // Return:
   //    N/A
   //
   //******************************************************************************************************************
   Particle::Particle(const int aPositionX, const int aPositionY, const float aTimeToLive) :
      mPositionX(aPositionX), mPositionY(aPositionY), mTimeToLive(aTimeToLive)
   {
   }

   //******************************************************************************************************************
   //
   // Method: Update
   //
   // Description:
   //    Reduce the time to live by the amount of elapsed time passed in.
   //
   // Arguments:
   //    aElapsedTime - The amount of time that has elapsed for this update.
   //
   // Return:
   //    N/A
   //
   //******************************************************************************************************************
   void Particle::Update(const float aElapsedTime)
   {
      mTimeToLive -= aElapsedTime;
   }

//*********************************************************************************************************************
// Public Methods - End
//*********************************************************************************************************************

//*********************************************************************************************************************
// Protected Methods - Start
//*********************************************************************************************************************

   // There are currently no protected methods for this class.

//*********************************************************************************************************************
// Protected Methods - End
//*********************************************************************************************************************

//*********************************************************************************************************************
// Private Methods - Start
//*********************************************************************************************************************

   // There are currently no protected methods for this class.

//*********************************************************************************************************************
// Private Methods - End
//*********************************************************************************************************************
}}